<h3>Hash Length Extension attack online</h3>
<p>
This tool is based on <a href="https://github.com/bwall/HashPump">HashPump</a>. Interface is slightly more user-friendly. <a href="https://en.wikipedia.org/wiki/Length_extension_attack">Learn more about the attack on Wikipedia</a>. 
E.g. for <b>KEYx=1</b> MD5 signature is f68b302c118f2fb43ee3dddb2dc6fe35 and message length is 6.
</p>
<p>
<input id="sign" placeholder="Signature">
<input id="len" placeholder="Message length"><br>
URI encode <input type="checkbox" id="encode" checked="true">
<br>
Data to add<br>
<textarea placeholder='&x=2' rows="5" cols="10" id="add"></textarea><br>
<button type="submit" id="btn" onclick="go()">Submit</button>
</p>
New signature: <div id="new_sign"></div>
Extra data:<br>
<textarea rows="5" cols="10" id="result"></textarea>

<script>
go = function(){
  len = $('#len').val()
  sign = $('#sign').val()
  if(!(parseInt(len) > 2)){
    alert("Minimum message length is 3");
    return false;
  }

  if(sign.length < 10){
    alert("Doesn't look like a signature");
    return false;
  }

  p={
    len: len,
    sign: sign,
    add: $('#add').val()
  }

  if($('#encode')[0].checked){
    p.encode=true;
  }

  $('#btn').hide()
  $.get("/pump",p,function(r){
    $('#new_sign').text(r[0])
    $('#result').val(r[1])
    $('#btn').show()

  })
  return false;

}
</script>